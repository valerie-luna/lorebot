// <auto-generated />
using Initiative;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Initiative.Database.Migrations
{
    [DbContext(typeof(InitiativeContext))]
    [Migration("20240121134203_PostgresInitial")]
    partial class PostgresInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Initiative.InitiativeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal?>("PingUser")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("PrimaryValue")
                        .HasColumnType("integer");

                    b.Property<int>("SecondaryValue")
                        .HasColumnType("integer");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("TeritaryValue")
                        .HasColumnType("integer");

                    b.Property<int>("TimesActed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("ChannelId", "Name");

                    b.HasIndex("ServerId");

                    b.ToTable("Initiatives");
                });

            modelBuilder.Entity("Initiative.LastRollEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal?>("PingUser")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Roll")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId", "ChannelId");

                    b.ToTable("LastRolls");
                });

            modelBuilder.Entity("Initiative.ServerSettingsEntity", b =>
                {
                    b.Property<decimal>("ServerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Config")
                        .HasColumnType("integer");

                    b.HasKey("ServerId");

                    b.ToTable("ServerSettings");
                });

            modelBuilder.Entity("Initiative.InitiativeEntity", b =>
                {
                    b.HasOne("Initiative.ServerSettingsEntity", "ServerSettings")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServerSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
